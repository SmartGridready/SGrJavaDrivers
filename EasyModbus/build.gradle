/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */

plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()

    maven {
        url "https://nexus.library.smartgridready.ch/repository/maven-releases/"
        mavenContent {
            releasesOnly()
        }
    }
    maven {
        url "https://nexus.library.smartgridready.ch/repository/maven-snapshots/"
        mavenContent {
            snapshotsOnly()
        }
    }
}

sourceSets {
    main.java.srcDirs = ['src/main/java']
    main.resources.srcDirs = ['src/main/resources']
    test.java.srcDirs = ['src/test/java']
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// use release versions by default (no suffix)
def sgr_driver_suffix = '-SNAPSHOT'

// use snapshots by setting property on commandline, e.g. -Psnapshots=sgr-specification,sgr-driver-api
if (project.hasProperty("snapshots")) {
    def snapList = project.getProperty("snapshots").split(',')
    if (snapList.contains("sgr-driver-api")) {
        println "using snapshots of sgr-driver-api"
        sgr_driver_suffix = '-SNAPSHOT'
    }
}

dependencies {
    api group: 'com.smartgridready', name: 'sgr-driver-api', version: "2.2.0${sgr_driver_suffix}"
    implementation group: 'io.github.java-native', name: 'jssc', version: '2.9.6'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.10'

    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.19.0'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.19.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.10.2'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.12.0'
}

test {
    useJUnitPlatform() // needed to run JUnit 5 test with gradle
    // this workaround is required to run some tests under JDKs > 17.
    // otherwise EqualsBuilder.reflectionEquals(...) may fail due to inaccessible fields, e.g. serialVersionUID.
    doFirst {
        jvmArgs("--add-opens", "java.base/java.util=ALL-UNNAMED")
    }
}

publishing {
    java {
        withSourcesJar()
    }

    repositories {
        maven {
            name = "Nexus"

            if (version.toString().contains('SNAPSHOT')) {
                url = uri("https://nexus.library.smartgridready.ch/repository/maven-snapshots/")
            } else {
                url = uri("https://nexus.library.smartgridready.ch/repository/maven-releases")
            }

            credentials {
                username = findProperty("nexus.username")
                password = findProperty("nexus.password")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            groupId = 'com.smartgridready'
            artifactId = 'easymodbus'

            from components.java
        }
    }
}
